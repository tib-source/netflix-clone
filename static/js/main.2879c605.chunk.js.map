{"version":3,"sources":["axios.js","components/Row.js","api.js","requests.js","components/Banner.js","App.js","index.js"],"names":["instance","axios","create","baseURL","baseUrl","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","useEffect","fetchMovies","a","get","response","data","results","className","map","movie","src","poster_path","backdrop_path","alt","id","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","truncate","string","length","split","substring","Banner","setMovie","request","random","Math","floor","console","log","style","backgroundImage","backgroundPosition","backgroundSize","name","original_title","original_name","overview","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2879c605.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// base url to make requests\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../axios\";\r\nimport \"./Row.css\";\r\nconst baseUrl = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst Row = ({ title, fetchUrl, isLargeRow }) => {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      const response = await axios.get(fetchUrl);\r\n      setMovies(response.data.results);\r\n    };\r\n    fetchMovies();\r\n  }, [fetchUrl]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {/* title here */}\r\n      <h2>{title}</h2>\r\n      {/* posters */}\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            src={\r\n              isLargeRow\r\n                ? `${baseUrl}${movie.poster_path}`\r\n                : `${baseUrl}${movie.backdrop_path}`\r\n            }\r\n            alt={movie.title}\r\n            className={`row__poster ${isLargeRow && \"row__large\"}`}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","const API_KEY = \"6a2745173099d322efb4ca990fa04161\";\r\n\r\nexport default API_KEY;\r\n","import API_KEY from \"./api\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/movie?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import axios from \"./../axios\";\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport requests from \"../requests\";\r\nimport \"./Banner.css\";\r\nconst truncate = (string = \"Loading...\", length = 150) => {\r\n  return string.split(\"\").length > length\r\n    ? string.substring(0, length) + \" ...\"\r\n    : string;\r\n};\r\nconst Banner = () => {\r\n  const [movie, setMovie] = useState([]);\r\n  const baseUrl = \"https://image.tmdb.org/t/p/original/\";\r\n  useEffect(() => {\r\n    async function fetchMovies() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      const random = Math.floor(Math.random() * request.data.results.length);\r\n      console.log(random);\r\n      setMovie(request.data.results[random]);\r\n    }\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundImage: `url('${baseUrl}${movie?.backdrop_path}')`,\r\n        backgroundPosition: \"center center\",\r\n        backgroundSize: \"cover\",\r\n      }}\r\n    >\r\n      <div className=\"banner__content\">\r\n        <h1 className=\"banner__title\">\r\n          {movie?.name ||\r\n            movie?.title ||\r\n            movie?.original_title ||\r\n            movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n\r\n        <div className=\"banner__description\">\r\n          {truncate(movie?.overview, 150)}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import Row from \"./components/Row\";\r\nimport requests from \"./requests\";\r\nimport \"./App.css\";\r\nimport Banner from \"./components/Banner\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Banner />\r\n      <Row\r\n        title=\"Netflix Originals\"\r\n        fetchUrl={requests.fetchNetflixOriginals}\r\n        isLargeRow\r\n      />\r\n      <Row title=\"Trending\" fetchUrl={requests.fetchTrending} />\r\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\r\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\r\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\r\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\r\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\r\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n"],"sourceRoot":""}